---
version: 0.1   ## rule: float type_check
##########################
#### STEP 1: Description
##########################

## rule: space 없어야 함. 한글 미사용
## rule2: max_length=256 (Byte)
name: bolt_fastening_table_classification

## Descrtion 은 cardview 에 표시 되기 위한 용. nested_dict 는 markdown 의 header 와 본문
description:
  title: "bolt fastening table classification"
  overview: ""   ## rule: max_length=512
  input_data: ""  ## rule: max_length=256
  output_data: ""  ## rule: max_length=256
  user_parameters: "" ## rule: max_length=512
  algorithm: "" ## rule: max_length=512
  ## - format: {BUCKET_NAME}/solution/{name}/common/icon/{yyyy}/{MM}/{dd}/{HHmmss}/icon.jpg
  ## rule: s3 format, file 명까지 기술 여부, jpg or png 확장자 확인
  icon: s3://s3-an2-cism-dev-aic/solution/bolt_fastening_table_classification/common/icon/2023/11/06/162000/icon.jpg



##########################
#### STEP 2: Pipeline
##########################

## pipeline 안에 list 는 3종류만 지원
##   - Set1: [type:train, type:inference]
##   - Set2: [type:inference]
##   - Set3: [type:train-inference]
pipeline:
    ### type 은 AIC, EdgeApp 의 실행 위치를 결정합니다.
    ## - type list: train, inference, train-inference
    ##    -- train: AIC 에서만 실행
    ##    -- inference: EdgeApp 에서만 실행
    ##    -- train-inference: EdgeApp 에서만 실행
  - type: train    ## rule: 지정된 type 만 사용 여부
    ## format: {AIC_CODENAME}/train/{name}
    container_uri: ecr-repo-an2-cism-dev-aic/train/bolt_fastening_table_classification  ## rule: format 일치

    ## - format: {BUCKET_NAME}/solution/{name}/train/data/{yyyy}/{MM}/{dd}/{HHmmss}/
    ## 복수개일 경우  list type ([path1, path2])로 작성해 주세요.
    dataset_uri : s3://s3-an2-cism-dev-aic/solution/bolt_fastening_table_classification/train/data/2023/11/06/162000/  ## rule: format 일치

    ## format: {BUCKET_NAME}/solution/{name}/train/artifacts/{yyyy}/{MM}/{dd}/{HHmmss}/  
    ## 결과물 저장: train.tar.gz, model.tar.gz (train 안에도 모델파일은 존재)
    artifact_uri : s3://s3-an2-cism-dev-aic/artifacts/bolt_fastening_table_classification/train/artifacts/

    resource:
      default: standard  ## type: low, standard, high // rule: type 일치

    parameters:
      ## ----------- user parameter format -----------
      # - name: parameters name
      #   description: description param
      #   type: float | string | int | single_selection | multi_selection
      #   selectable:
      #     - option1
      #     - option2
      #     - option3
      #   default:
      #     - option1
      #   range: range of float or int or length of string
      # --------- float 입력 시 ---------------------
      #  - name: float_param
      #    description: this is param to input float
      #    type: float
      #    default:
      #      - 0.5
      #    range:
      #      - 0.0
      #      - 1.0
      # --------- string 입력 시 ---------------------
      #  - name: string_param
      #    description: this is param to input string
      #    type: string
      #    default:
      #      - hello
      #    range:
      #      - 5
      #      - 100
      # --------- string-selection 입력 시 ---------------------
      #  - name: single_selection_param
      #    description: this is param to input single selection
      #    type: single_selection
      #    selectable:
      #      - option1
      #      - option2
      #      - option4
      #    default:
      #      - option1
      # --------- multiple-selection 입력 시 ---------------------
      #  - name: multi_selection_param
      #    description: this is param to input multi selection
      #    type: multi_selection
      #    selected:
      #      - option1
      #      - option2
      #      - option3
      #    default:
      #      - option1
      #      - option3

      ## rule1 : user_parameters & selected... & candidate 의 step 동일 여부
      ## rule2 : user_parameters 의 위의 ui 규격 따랐는지 확인
      ## rule3 : user_parameters 에 존재하는 param 이 selected.. 에도 존재하는지 확인
      user_parameters:
          - step: input  ## 필수
            args:
                - name: x_columns
                  description: 모델링에 사용될 features list. "x1, x2, x3" 으로 표시 해야 함
                  type: string
                  default:
                  range:
                    - 2
                    - 100
          - step: preprocess
            args:
                - name: handling_missing
                  description: missing 처리 방식을 선택
                  type: single_selection
                  selectable:
                    - dropna
                    - fill_mean
                    - interpolation
                  default:
                    - interpolation
          - step: train
            args:
      selected_user_parameters:   ## UI 로 결정값 표시 key: value 로 단순화
          - step: input  ## 필수
            args:
                x_columns: "x1, x2, x3"
          - step: preprocess
            args:
                handling_missing: dropna
          - step: train
            args:
      ### instance solution 생성 시, Editable 할 parameters
      candidate_parameters:    ## fixed 할 값
          - step: input  ## 필수
            args:
                use_all_x: False
                y_column: label #TRAIN_LABEL" #label"
                groupkey_columns:
                drop_columns:
                time_column: timestamp
          - step: preprocess
            args:
                handling_outlier_x: none        #none, distribution, spec_limit, specout_drop, exponential
                handling_scaling_x: none  #none"         #none, standard, minmax, abs, robust
                handling_encoding_x_columns: #Budget Actual,Business Unit" # categorical columns
                handling_encoding_y_column: label #TRAIN_LABEL" # y (=label)이 categorical인 경우 설정
                handling_encoding_x: none #onehot"    ## none, label, ordinal, binary, onehot, hashing
                handling_encoding_y: label    ## none, label, ordinal, binary, onehot, hashing
                limit_encoding_categories: 30 # onehot이나 hashing 인코딩 등을 진행 시 컬럼이 너무 많아지는 것에 대한 한계치 설정
                handling_imputer_x: none #mean"  ## none, mean, median, most_frequent
                handling_imputer_y: none  ## none, mean, median, most_frequent
                drop_duplicate_time: True   ## group 단위로 중복 확인 (time_column 없으면 미진행)
                load_train_preprocess: False   ## (inference workflow 전용) True 이면, train preprocess 를 참조하여 진행
                handling_downsampling_interval: 0   ## 0, 1, 2,... (0 이면 사용하지 않음)
                downsampling_method: median #first"   ## first, last, mean, median
          - step: train
            args:
                train_models: ['sr','dt']  ## all, dt, sr, rrcf  -- "split:/rrcf"
                decision_rule: two
                hpo_repeat: 20

  - type: inference
    ## format: {AIC_CODENAME}/inference/{name}
    container_uri: ecr-repo-an2-cism-dev-aic/inference/bolt_fastening_table_classification  ## rule: format 일치

    ## - format: {BUCKET_NAME}/solution/{name}/inference/data/{yyyy}/{MM}/{dd}/{HHmmss}/
    ## 복수개일 경우  list type ([path1, path2])로 작성해 주세요.
    dataset_uri : s3://s3-an2-cism-dev-aic/solution/bolt_fastening_table_classification/inference/data/2023/11/06/162000/  ## rule: format 일치

    ## format: {BUCKET_NAME}/solution/{name}/inference/artifacts/{yyyy}/{MM}/{dd}/{HHmmss}/  
    ## 결과물 저장: inference.tar.gz, 
    artifact_uri : s3://s3-an2-cism-dev-aic/artifacts/bolt_fastening_table_classification/inference/artifacts/


    resource:
      default: standard  ## type: low, standard, high // rule: type 일치

    ## rule: 위와 동일
    parameters:
      user_parameters:
          - step: input  ## 필수
            args:
                - name: x_columns
                  description: 모델링에 사용될 features list. "x1, x2, x3" 으로 표시 해야 함
                  type: string
                  default:
                  range:
                    - 2
                    - 100
          - step: preprocess
            args:
                - name: handling_missing
                  description: missing 처리 방식을 선택
                  type: single_selection
                  selectable:
                    - dropna
                    - fill_mean
                    - interpolation
                  default:
                    - interpolation
          - step: inference
            args:
      selected_user_parameters:   ## UI 로 결정값 표시 key: value 로 단순화
          - step: input  ## 필수
            args:
                x_columns: "x1, x2, x3"
          - step: preprocess
            args:
                handling_missing: dropna
          - step: inference
            args:
      ### instance solution 생성 시, Editable 할 parameters
      candidate_parameters:    ## fixed 할 값
          - step: input  ## 필수
            args:
                use_all_x: False
                y_column: label #TRAIN_LABEL" #label"
                groupkey_columns:
                drop_columns:
                time_column: timestamp
          - step: preprocess
            args:
                handling_outlier_x: none        #none, distribution, spec_limit, specout_drop, exponential
                handling_scaling_x: none  #none"         #none, standard, minmax, abs, robust
                handling_encoding_x_columns: #Budget Actual,Business Unit" # categorical columns
                handling_encoding_y_column: label #TRAIN_LABEL" # y (=label)이 categorical인 경우 설정
                handling_encoding_x: none #onehot"    ## none, label, ordinal, binary, onehot, hashing
                handling_encoding_y: label    ## none, label, ordinal, binary, onehot, hashing
                limit_encoding_categories: 30 # onehot이나 hashing 인코딩 등을 진행 시 컬럼이 너무 많아지는 것에 대한 한계치 설정
                handling_imputer_x: none #mean"  ## none, mean, median, most_frequent
                handling_imputer_y: none  ## none, mean, median, most_frequent
                drop_duplicate_time: True   ## group 단위로 중복 확인 (time_column 없으면 미진행)
                load_train_preprocess: False   ## (inference workflow 전용) True 이면, train preprocess 를 참조하여 진행
                handling_downsampling_interval: 0   ## 0, 1, 2,... (0 이면 사용하지 않음)
                downsampling_method: median #first"   ## first, last, mean, median
          - step: inference
            args:
                model_select: best   ## best, sr, rrcf, dt

##########################
#### STEP 3: Wrangler
##########################

## TODO: type=inference 인 경우에만 존재. AIC 가 값을 생성
## format: {BUCKET_NAME}/{name}/inference/wrangler_code/wrangler.py
wrangler_code_uri:   ## rule: format 일치
## format: {BUCKET_NAME}/{name}/inference/wrangler_dataset/wrangler.csv
wrangler_dataset_uri:   ## rule: format 일치

...:
